version: 2.1
jobs:
  update_dependencies:
    docker:
      - image: circleci/python:3.7-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-{{ checksum "requirements.txt" }}-{{ checksum "package.json" }}
      - run:
          command: |
            pip install --user -r requirements.txt
            pip install --user -r .circleci/requirements.txt
          name: Install Python Dependencies
      - run:
          command: npm install
          name: Install Node Dependencies
      - save_cache:
          key: pip-{{ checksum "requirements.txt" }}-{{ checksum "package.json" }}
          paths:
            - /home/circleci/.local/lib/
            - ./node_modules
  run_tests:
    docker:
      - image: circleci/python:3.7-node
        environment:
          DEBUG: true
          SECRET_KEY: fakekey
          RECAPTCHA_PRIVATE_KEY: fakekey
          RECAPTCHA_PUBLIC_KEY: fakekey
          SITE_URL: test
          DATABASE_URL: postgres://root@localhost:5432/test
      - image: circleci/postgres:10
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: test
    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-{{ checksum "requirements.txt" }}-{{ checksum "package.json" }}
      - run:
          name: Generate assets
          command: npm run-script build-dev
      - run:
          name: Running tests
          command: python manage.py test -v 2 2>&1 | tee -a results.txt
      - store_artifacts:
          path: results.txt
  sentry:
    docker:
      - image: circleci/buildpack-deps
        environment:
          SENTRY_PROJECT: furrynz
    steps:
      - checkout
      - run:
          name: Install sentry-CLI
          command: curl -sL https://sentry.io/get-cli/ | bash
      - run:
          name: Save current git hash to sentry-release-version.txt
          command: git rev-parse HEAD > sentry-release-version.txt
      - run:
          name: Create a new Sentry release
          command: |
            VERSION=$(git rev-parse HEAD)
            sentry-cli releases --org "${SENTRY_ORG}" new \
              --project "${SENTRY_PROJECT}" "${VERSION}"
      - run:
          name: Set commits of a Sentry release
          command: >
            VERSION=$(cat sentry-release-version.txt)

            sentry-cli releases --org "${SENTRY_ORG}" set-commits --auto
            "${VERSION}"

      - run:
          name: Finalize a Sentry release
          command: >
            VERSION=$(cat sentry-release-version.txt)

            sentry-cli releases --org "${SENTRY_ORG}" finalize
            "${VERSION}"
workflows:
  version: 2
  build-and-test:
    jobs:
      - update_dependencies
      - run_tests:
          requires:
            - update_dependencies
      - sentry:
          context: Sentry
          filters:
            branches:
              only: master
