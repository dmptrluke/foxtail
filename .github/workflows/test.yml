name: Run Tests

on: [push]

jobs:
  generate_assets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Cache Node dependencies
        id: node-cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
      - name: Install JS dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Generate assets
        run: npm run-script build-dev
      - name: Store assets for testing
        uses: actions/upload-artifact@v1
        with:
          name: bundles
          path: assets/bundles
      - name: Store webpack-stats for testing
        uses: actions/upload-artifact@v1
        with:
          name: webpack-stats
          path: webpack-stats.json
  test:
    runs-on: ubuntu-latest
    needs: generate_assets
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
    services:
      postgres:
        image: postgres:10.11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          # will assign a random free host port
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v1
      - name: Install libpq-dev
        run: sudo apt-get -y install libpq-dev
      - name: Download and install chromedriver
        run: |
          export CHROME_DRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`
          wget http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip
          sudo unzip chromedriver_linux64.zip -d /usr/local/bin
          export CHROME_BIN=chromium-browser
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Python dependencies
        id: py-cache
        uses: actions/cache@v1
        with:
          path: ~/.local/lib/
          key: ${{ runner.OS }}-py${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.OS }}-py${{ matrix.python-version }}-
      - name: Install Python dependencies
        if: steps.py-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install --user -r requirements.txt
          pip install --user -r tests/requirements.txt
      - name: Get assets
        uses: actions/download-artifact@v1
        with:
          name: bundles
          path: assets/bundles
      - name: Get webpack-stats
        uses: actions/download-artifact@v1
        with:
          name: webpack-stats
      - name: Test with pytest
        env:
          DEBUG: true
          SECRET_KEY: fake
          RECAPTCHA_PUBLIC_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
          RECAPTCHA_PRIVATE_KEY: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
          DATABASE_URL: postgres://postgres@localhost:${{ job.services.postgres.ports['5432'] }}/postgres
          WEBPACK_STATS_PATH: webpack-stats/webpack-stats.json
          SITE_URL: test
        run: |
          python -m pytest
